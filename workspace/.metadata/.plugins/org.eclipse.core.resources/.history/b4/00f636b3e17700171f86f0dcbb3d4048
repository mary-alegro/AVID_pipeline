package calibration;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import SlideScan.SlideScan;

public class DarkFrameW extends JFrame {

	private JPanel contentPane;
	private JTextField textDarksDir;
	private JTextField textNumDark;
	
	private SlideScan scanCtr;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DarkFrameW frame = new DarkFrameW();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	public DarkFrameW(SlideScan sC) {		
		this();
		this.scanCtr = sC;
	}
	
	public JFrame getFrame() {
		return this;
	}

	/**
	 * Create the frame.
	 */
	public DarkFrameW() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 451, 247);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblDarkFrameCreator = new JLabel("Dark Frame Creator");
		lblDarkFrameCreator.setBounds(10, 11, 179, 14);
		contentPane.add(lblDarkFrameCreator);
		
		JLabel lblFolder = new JLabel("Dark frames:");
		lblFolder.setBounds(10, 56, 62, 14);
		contentPane.add(lblFolder);
		
		textDarksDir = new JTextField();
		textDarksDir.setBounds(82, 53, 252, 20);
		contentPane.add(textDarksDir);
		textDarksDir.setColumns(10);
		
		JButton btnDarkFramesDir = new JButton("Open..");
		btnDarkFramesDir.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser chooser = new JFileChooser();
				chooser.setDialogTitle("Choose destination directory.");
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				if(chooser.showOpenDialog(getFrame()) == JFileChooser.APPROVE_OPTION) {
					File folder = chooser.getSelectedFile();
					textDarksDir.setText(folder.getAbsolutePath());
				}
			}
		});
		btnDarkFramesDir.setBounds(344, 52, 80, 23);
		contentPane.add(btnDarkFramesDir);
		
		JLabel lblNewLabel = new JLabel("Num. dark frames:");
		lblNewLabel.setBounds(10, 99, 138, 14);
		contentPane.add(lblNewLabel);
		
		textNumDark = new JTextField();
		textNumDark.setBounds(110, 96, 86, 20);
		contentPane.add(textNumDark);
		textNumDark.setColumns(10);
		
		JButton btnRunGrabDark = new JButton("Run");
		btnRunGrabDark.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(textNumDark.getText() == "") {
				    JOptionPane.showMessageDialog(getFrame(), "User must enter the humber of frames to grab.", "Dialog",
				            JOptionPane.ERROR_MESSAGE);
				    return;
				}
				if(textDarksDir.getText() == "") {
				    JOptionPane.showMessageDialog(getFrame(), "User must enter the path to save frames.", "Dialog",
				            JOptionPane.ERROR_MESSAGE);
				    return;
				}
				
				int numFrames = Integer.parseInt(textNumDark.getText());
				String folder = textDarksDir.getText();
				scanCtr.acquireDarkFrames(numFrames, folder);
			}
		});
		btnRunGrabDark.setBounds(10, 154, 89, 45);
		contentPane.add(btnRunGrabDark);
	}
}
